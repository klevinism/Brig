package generated;

// Generated from brig.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class brigLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__10=1, T__9=2, T__8=3, T__7=4, T__6=5, T__5=6, T__4=7, T__3=8, T__2=9, 
		T__1=10, T__0=11, IMPORT=12, INCLUDE=13, OR=14, AND=15, EQ=16, NEQ=17, 
		GT=18, LT=19, GTEQ=20, LTEQ=21, SCOL=22, PLUS=23, MINUS=24, MULT=25, DIV=26, 
		MOD=27, POW=28, NOT=29, PRINT=30, PRINTLN=31, ASSIGN=32, OPAR=33, CPAR=34, 
		OBRACE=35, CBRACE=36, TRUE=37, FALSE=38, NULL=39, IF=40, ELSE=41, WS=42, 
		ID=43, NUMBER=44, FLOAT=45, STRING=46, COMMENT=47, LINE_COMMENT=48, OTHER=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'"
	};
	public static final String[] ruleNames = {
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "IMPORT", "INCLUDE", "OR", "AND", "EQ", "NEQ", "GT", "LT", 
		"GTEQ", "LTEQ", "SCOL", "PLUS", "MINUS", "MULT", "DIV", "MOD", "POW", 
		"NOT", "PRINT", "PRINTLN", "ASSIGN", "OPAR", "CPAR", "OBRACE", "CBRACE", 
		"TRUE", "FALSE", "NULL", "IF", "ELSE", "WS", "ID", "NUMBER", "FLOAT", 
		"STRING", "COMMENT", "LINE_COMMENT", "OTHER"
	};


	public brigLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "brig.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\63\u016b\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\2\3"+
		"\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3"+
		"\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17"+
		"\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24"+
		"\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31"+
		"\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3"+
		"$\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3"+
		")\3*\3*\3*\3*\3*\3+\6+\u0120\n+\r+\16+\u0121\3+\3+\3,\3,\7,\u0128\n,\f"+
		",\16,\u012b\13,\3-\6-\u012e\n-\r-\16-\u012f\3.\6.\u0133\n.\r.\16.\u0134"+
		"\3.\3.\7.\u0139\n.\f.\16.\u013c\13.\3.\3.\6.\u0140\n.\r.\16.\u0141\5."+
		"\u0144\n.\3/\3/\3/\3/\7/\u014a\n/\f/\16/\u014d\13/\3/\3/\3\60\3\60\3\60"+
		"\3\60\7\60\u0155\n\60\f\60\16\60\u0158\13\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\61\3\61\3\61\3\61\7\61\u0163\n\61\f\61\16\61\u0166\13\61\3\61\3\61"+
		"\3\62\3\62\3\u0156\2\63\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63\3\2\b\5\2\13\f\17\17\"\"\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\5\2\f"+
		"\f\17\17$$\4\2\f\f\17\17\u0175\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t"+
		"\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2"+
		"\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2"+
		"\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2"+
		"+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2"+
		"\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2"+
		"C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3"+
		"\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2"+
		"\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3e\3\2\2\2\5m\3\2\2\2\7"+
		"r\3\2\2\2\tt\3\2\2\2\13z\3\2\2\2\r~\3\2\2\2\17\u0081\3\2\2\2\21\u0085"+
		"\3\2\2\2\23\u008e\3\2\2\2\25\u0091\3\2\2\2\27\u0098\3\2\2\2\31\u009a\3"+
		"\2\2\2\33\u00a1\3\2\2\2\35\u00a9\3\2\2\2\37\u00ac\3\2\2\2!\u00b0\3\2\2"+
		"\2#\u00b3\3\2\2\2%\u00ba\3\2\2\2\'\u00c2\3\2\2\2)\u00c8\3\2\2\2+\u00d3"+
		"\3\2\2\2-\u00dc\3\2\2\2/\u00de\3\2\2\2\61\u00e0\3\2\2\2\63\u00e2\3\2\2"+
		"\2\65\u00e4\3\2\2\2\67\u00e6\3\2\2\29\u00e8\3\2\2\2;\u00ea\3\2\2\2=\u00ee"+
		"\3\2\2\2?\u00f4\3\2\2\2A\u00fc\3\2\2\2C\u00fe\3\2\2\2E\u0100\3\2\2\2G"+
		"\u0102\3\2\2\2I\u0104\3\2\2\2K\u0106\3\2\2\2M\u010b\3\2\2\2O\u0111\3\2"+
		"\2\2Q\u0116\3\2\2\2S\u0119\3\2\2\2U\u011f\3\2\2\2W\u0125\3\2\2\2Y\u012d"+
		"\3\2\2\2[\u0143\3\2\2\2]\u0145\3\2\2\2_\u0150\3\2\2\2a\u015e\3\2\2\2c"+
		"\u0169\3\2\2\2ef\7f\2\2fg\7g\2\2gh\7h\2\2hi\7c\2\2ij\7w\2\2jk\7n\2\2k"+
		"l\7v\2\2l\4\3\2\2\2mn\7e\2\2no\7c\2\2op\7u\2\2pq\7g\2\2q\6\3\2\2\2rs\7"+
		"<\2\2s\b\3\2\2\2tu\7y\2\2uv\7j\2\2vw\7k\2\2wx\7n\2\2xy\7g\2\2y\n\3\2\2"+
		"\2z{\7h\2\2{|\7q\2\2|}\7t\2\2}\f\3\2\2\2~\177\7d\2\2\177\u0080\7g\2\2"+
		"\u0080\16\3\2\2\2\u0081\u0082\7n\2\2\u0082\u0083\7g\2\2\u0083\u0084\7"+
		"v\2\2\u0084\20\3\2\2\2\u0085\u0086\7h\2\2\u0086\u0087\7w\2\2\u0087\u0088"+
		"\7p\2\2\u0088\u0089\7e\2\2\u0089\u008a\7v\2\2\u008a\u008b\7k\2\2\u008b"+
		"\u008c\7q\2\2\u008c\u008d\7p\2\2\u008d\22\3\2\2\2\u008e\u008f\7f\2\2\u008f"+
		"\u0090\7q\2\2\u0090\24\3\2\2\2\u0091\u0092\7u\2\2\u0092\u0093\7y\2\2\u0093"+
		"\u0094\7k\2\2\u0094\u0095\7v\2\2\u0095\u0096\7e\2\2\u0096\u0097\7j\2\2"+
		"\u0097\26\3\2\2\2\u0098\u0099\7.\2\2\u0099\30\3\2\2\2\u009a\u009b\7k\2"+
		"\2\u009b\u009c\7o\2\2\u009c\u009d\7r\2\2\u009d\u009e\7q\2\2\u009e\u009f"+
		"\7t\2\2\u009f\u00a0\7v\2\2\u00a0\32\3\2\2\2\u00a1\u00a2\7k\2\2\u00a2\u00a3"+
		"\7p\2\2\u00a3\u00a4\7e\2\2\u00a4\u00a5\7n\2\2\u00a5\u00a6\7w\2\2\u00a6"+
		"\u00a7\7f\2\2\u00a7\u00a8\7g\2\2\u00a8\34\3\2\2\2\u00a9\u00aa\7q\2\2\u00aa"+
		"\u00ab\7t\2\2\u00ab\36\3\2\2\2\u00ac\u00ad\7c\2\2\u00ad\u00ae\7p\2\2\u00ae"+
		"\u00af\7f\2\2\u00af \3\2\2\2\u00b0\u00b1\7k\2\2\u00b1\u00b2\7u\2\2\u00b2"+
		"\"\3\2\2\2\u00b3\u00b4\7k\2\2\u00b4\u00b5\7u\2\2\u00b5\u00b6\7\"\2\2\u00b6"+
		"\u00b7\7p\2\2\u00b7\u00b8\7q\2\2\u00b8\u00b9\7v\2\2\u00b9$\3\2\2\2\u00ba"+
		"\u00bb\7i\2\2\u00bb\u00bc\7t\2\2\u00bc\u00bd\7g\2\2\u00bd\u00be\7c\2\2"+
		"\u00be\u00bf\7v\2\2\u00bf\u00c0\7g\2\2\u00c0\u00c1\7t\2\2\u00c1&\3\2\2"+
		"\2\u00c2\u00c3\7n\2\2\u00c3\u00c4\7q\2\2\u00c4\u00c5\7y\2\2\u00c5\u00c6"+
		"\7g\2\2\u00c6\u00c7\7t\2\2\u00c7(\3\2\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca"+
		"\7u\2\2\u00ca\u00cb\7\"\2\2\u00cb\u00cc\7i\2\2\u00cc\u00cd\7t\2\2\u00cd"+
		"\u00ce\7g\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0\7v\2\2\u00d0\u00d1\7g\2\2"+
		"\u00d1\u00d2\7t\2\2\u00d2*\3\2\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7u\2"+
		"\2\u00d5\u00d6\7\"\2\2\u00d6\u00d7\7n\2\2\u00d7\u00d8\7q\2\2\u00d8\u00d9"+
		"\7y\2\2\u00d9\u00da\7g\2\2\u00da\u00db\7t\2\2\u00db,\3\2\2\2\u00dc\u00dd"+
		"\7=\2\2\u00dd.\3\2\2\2\u00de\u00df\7-\2\2\u00df\60\3\2\2\2\u00e0\u00e1"+
		"\7/\2\2\u00e1\62\3\2\2\2\u00e2\u00e3\7,\2\2\u00e3\64\3\2\2\2\u00e4\u00e5"+
		"\7\61\2\2\u00e5\66\3\2\2\2\u00e6\u00e7\7\'\2\2\u00e78\3\2\2\2\u00e8\u00e9"+
		"\7`\2\2\u00e9:\3\2\2\2\u00ea\u00eb\7p\2\2\u00eb\u00ec\7q\2\2\u00ec\u00ed"+
		"\7v\2\2\u00ed<\3\2\2\2\u00ee\u00ef\7r\2\2\u00ef\u00f0\7t\2\2\u00f0\u00f1"+
		"\7k\2\2\u00f1\u00f2\7p\2\2\u00f2\u00f3\7v\2\2\u00f3>\3\2\2\2\u00f4\u00f5"+
		"\7r\2\2\u00f5\u00f6\7t\2\2\u00f6\u00f7\7k\2\2\u00f7\u00f8\7p\2\2\u00f8"+
		"\u00f9\7v\2\2\u00f9\u00fa\7n\2\2\u00fa\u00fb\7p\2\2\u00fb@\3\2\2\2\u00fc"+
		"\u00fd\7?\2\2\u00fdB\3\2\2\2\u00fe\u00ff\7*\2\2\u00ffD\3\2\2\2\u0100\u0101"+
		"\7+\2\2\u0101F\3\2\2\2\u0102\u0103\7}\2\2\u0103H\3\2\2\2\u0104\u0105\7"+
		"\177\2\2\u0105J\3\2\2\2\u0106\u0107\7v\2\2\u0107\u0108\7t\2\2\u0108\u0109"+
		"\7w\2\2\u0109\u010a\7g\2\2\u010aL\3\2\2\2\u010b\u010c\7h\2\2\u010c\u010d"+
		"\7c\2\2\u010d\u010e\7n\2\2\u010e\u010f\7u\2\2\u010f\u0110\7g\2\2\u0110"+
		"N\3\2\2\2\u0111\u0112\7p\2\2\u0112\u0113\7w\2\2\u0113\u0114\7n\2\2\u0114"+
		"\u0115\7n\2\2\u0115P\3\2\2\2\u0116\u0117\7k\2\2\u0117\u0118\7h\2\2\u0118"+
		"R\3\2\2\2\u0119\u011a\7g\2\2\u011a\u011b\7n\2\2\u011b\u011c\7u\2\2\u011c"+
		"\u011d\7g\2\2\u011dT\3\2\2\2\u011e\u0120\t\2\2\2\u011f\u011e\3\2\2\2\u0120"+
		"\u0121\3\2\2\2\u0121\u011f\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u0123\3\2"+
		"\2\2\u0123\u0124\b+\2\2\u0124V\3\2\2\2\u0125\u0129\t\3\2\2\u0126\u0128"+
		"\t\4\2\2\u0127\u0126\3\2\2\2\u0128\u012b\3\2\2\2\u0129\u0127\3\2\2\2\u0129"+
		"\u012a\3\2\2\2\u012aX\3\2\2\2\u012b\u0129\3\2\2\2\u012c\u012e\t\5\2\2"+
		"\u012d\u012c\3\2\2\2\u012e\u012f\3\2\2\2\u012f\u012d\3\2\2\2\u012f\u0130"+
		"\3\2\2\2\u0130Z\3\2\2\2\u0131\u0133\t\5\2\2\u0132\u0131\3\2\2\2\u0133"+
		"\u0134\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135\u0136\3\2"+
		"\2\2\u0136\u013a\7\60\2\2\u0137\u0139\t\5\2\2\u0138\u0137\3\2\2\2\u0139"+
		"\u013c\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u0144\3\2"+
		"\2\2\u013c\u013a\3\2\2\2\u013d\u013f\7\60\2\2\u013e\u0140\t\5\2\2\u013f"+
		"\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u013f\3\2\2\2\u0141\u0142\3\2"+
		"\2\2\u0142\u0144\3\2\2\2\u0143\u0132\3\2\2\2\u0143\u013d\3\2\2\2\u0144"+
		"\\\3\2\2\2\u0145\u014b\7$\2\2\u0146\u014a\n\6\2\2\u0147\u0148\7$\2\2\u0148"+
		"\u014a\7$\2\2\u0149\u0146\3\2\2\2\u0149\u0147\3\2\2\2\u014a\u014d\3\2"+
		"\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014e\3\2\2\2\u014d"+
		"\u014b\3\2\2\2\u014e\u014f\7$\2\2\u014f^\3\2\2\2\u0150\u0151\7\61\2\2"+
		"\u0151\u0152\7,\2\2\u0152\u0156\3\2\2\2\u0153\u0155\13\2\2\2\u0154\u0153"+
		"\3\2\2\2\u0155\u0158\3\2\2\2\u0156\u0157\3\2\2\2\u0156\u0154\3\2\2\2\u0157"+
		"\u0159\3\2\2\2\u0158\u0156\3\2\2\2\u0159\u015a\7,\2\2\u015a\u015b\7\61"+
		"\2\2\u015b\u015c\3\2\2\2\u015c\u015d\b\60\3\2\u015d`\3\2\2\2\u015e\u015f"+
		"\7\61\2\2\u015f\u0160\7\61\2\2\u0160\u0164\3\2\2\2\u0161\u0163\n\7\2\2"+
		"\u0162\u0161\3\2\2\2\u0163\u0166\3\2\2\2\u0164\u0162\3\2\2\2\u0164\u0165"+
		"\3\2\2\2\u0165\u0167\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u0168\b\61\3\2"+
		"\u0168b\3\2\2\2\u0169\u016a\13\2\2\2\u016ad\3\2\2\2\16\2\u0121\u0129\u012f"+
		"\u0134\u013a\u0141\u0143\u0149\u014b\u0156\u0164\4\b\2\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}